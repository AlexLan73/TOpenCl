Работы:
- CudaModule
 0. id=0 Control_module - можно использовать стандартно во всех модулях для управления модулями данного блока (CudaModule) 
    - цепочка действий: 
        DataContext получает данные v если в нем есть код управления к примеру  meta_data["set_params"] !=""
        то данный блок metadata передается в блок Nexus.Core где есть 2 варианта решения задачи:
	1. Так как у нас все входы set_params(metadata) имеют стандартный интерфейс map<string, string> то просто транслирует этот блок по соответствующему id,
	2. metadata передается в id=0 Control_module где должны быть реализованы какие либо действия, и передать управление в соответствующий модуль по id. 
	Примером может быть следующая задача, в clFFTModule приходит команда создай файл с данными N точек FFT на M лучей и запустить тест по id=1. Создается массив 
	данных в своем Temp, передаётся управление  set_params(metadata) в соответствующий модуль и задача запускается на выполнение. Сформированный файл (мы знаем название и 	где лежит) может быть считан из любого блока к примеру MinskModule.lib с тестированием эти значений но в другой реализации. 
		название файла можно сразу передать, можно создать и вернуть в C# для дальнейшего использования.   
1. id=1 TemperatureTask
	для теста: генератор случайных чисел в диапазоне от 20 до 90 если числа выпадают до 60 это info до 80 предупреждение выше 80 error все это в логгер и в C#.
2. id=2 ActiveCoresTask
	формируем sin, передаем в C#. Через set_params(metadata) будем устанавливать параметры. пишем в logger. Запускаем тест с новыми параметрами.
 	Управление сделаем на прямую через Core на id=2;
	